{
  "results": [
    {
      "question": "What is the purpose of the 'action' attribute in a <form> element?",
      "correct_answer": "To specify the URL to which the form data should be submitted",
      "incorrect_answers": [
        "To specify the HTTP method to be used for form submission",
        "To specify the encoding type for form data",
        "To specify the form fields that should be included in the submission"
      ]
    },
    {
      "question": "What is the default method attribute for a <form> element?",
      "correct_answer": "GET",
      "incorrect_answers": [
        "POST",
        "PUT",
        "DELETE"
      ]
    },
    {
      "question": "What is the purpose of the 'enctype' attribute in a <form> element?",
      "correct_answer": "To specify the encoding type for form data",
      "incorrect_answers": [
        "To specify the URL to which the form data should be submitted",
        "To specify the HTTP method to be used for form submission",
        "To specify the form fields that should be included in the submission"
      ]
    },
    {
      "question": "What type of HTTP request does a form submission typically generate?",
      "correct_answer": "POST",
      "incorrect_answers": [
        "GET",
        "PUT",
        "DELETE"
      ]
    },
    {
      "question": "How is form data encoded in a typical form submission?",
      "correct_answer": "Key-value tuples separated by '>', with a '=' between the key and the value",
      "incorrect_answers": [
        "JSON",
        "XML",
        "CSV"
      ]
    },
    {
      "question": "What is the purpose of explicitly handling the 'submit' event for a form?",
      "correct_answer": "To prevent the default action of automatically sending a HTTP 'POST' request",
      "incorrect_answers": [
        "To trigger client-side validation of form data",
        "To update the state of form fields",
        "To display an error message if the form is invalid"
      ]
    },
    {
      "question": "What is a controlled component in React?",
      "correct_answer": "An input form element whose value is controlled by React state",
      "incorrect_answers": [
        "A form component that is rendered by React",
        "A form component that uses React Hooks",
        "A form component that is validated by React"
      ]
    },
    {
      "question": "What is the 'single source of truth' in a controlled component?",
      "correct_answer": "The React state",
      "incorrect_answers": [
        "The form input element",
        "The form submission handler",
        "The server-side data store"
      ]
    },
    {
      "question": "What is the purpose of the 'defaultValue' property in the 'useForm' hook?",
      "correct_answer": "To set the initial values of form fields",
      "incorrect_answers": [
        "To specify the validation rules for form fields",
        "To register form fields with React Hook Form",
        "To trigger form submission"
      ]
    },
    {
      "question": "Which third-party library is commonly used as an alternative to working directly with controlled components in React?",
      "correct_answer": "Formik",
      "incorrect_answers": [
        "React Router",
        "Redux",
        "React Query"
      ]
    },
    {
      "question": "What is the purpose of the 'useForm' hook in React Hook Form?",
      "correct_answer": "To provide a hook for managing form state and validation",
      "incorrect_answers": [
        "To handle form submissions",
        "To register form controls",
        "To render form components"
      ]
    },
    {
      "question": "How can you set an initial value for a form field in React Hook Form?",
      "correct_answer": "By using the 'defaultValues' property in the 'useForm' hook",
      "incorrect_answers": [
        "By using the 'defaultValue' attribute in the form control",
        "By setting the initial value directly in the component state",
        "By passing the initial value as a prop to the form component"
      ]
    },
    {
      "question": "What is the default HTTP method used by a <form> element?",
      "correct_answer": "GET",
      "incorrect_answers": [
        "POST",
        "PUT",
        "DELETE"
      ]
    },
    {
      "question": "How does React Hook Form handle form submissions when the back-end is a Web API?",
      "correct_answer": "By sending AJAX requests with JSON-encoded form data",
      "incorrect_answers": [
        "By sending HTTP POST requests with urlencoded form data",
        "By generating a server-side script to handle form submissions",
        "By using the 'fetch' API to send form data"
      ]
    },
    {
      "question": "What is the purpose of the 'register' function in React Hook Form?",
      "correct_answer": "To associate a form control with React Hook Form and enable form validation",
      "incorrect_answers": [
        "To submit the form data to a server",
        "To update the form state in React",
        "To handle form submission events"
      ]
    },
    {
      "question": "What is the purpose of the 'watch' function in React Hook Form?",
      "correct_answer": "To obtain the value of a form field as it's updated",
      "incorrect_answers": [
        "To validate the form data before submission",
        "To handle form submission events",
        "To reset the form to its initial state"
      ]
    },
    {
      "question": "How can you add validation rules to a form control in React Hook Form?",
      "correct_answer": "By passing validation rule objects as options to the 'register' function",
      "incorrect_answers": [
        "By using the 'validate' prop on the form control element",
        "By adding 'data-validation' attributes to the form control element",
        "By wrapping the form control element in a validation component"
      ]
    },
    {
      "question": "What is the default validation rule for a required form field in React Hook Form?",
      "correct_answer": "'required: true'",
      "incorrect_answers": [
        "'minLength: 1'",
        "'pattern: /[A-Za-z0-9]+/'",
        "'validate: () => true'"
      ]
    }
  ],
  "setCount": 2
}