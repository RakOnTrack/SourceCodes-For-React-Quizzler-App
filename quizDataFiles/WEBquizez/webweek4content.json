{
  "results": [
    {
      "question": "What is the difference between handling events in React and handling events on DOM elements?",
      "correct_answer": "React events are named using camelCase, rather than lowercase. With JSX you pass a function as the event handler, rather than a string.",
      "incorrect_answers": [
        "React events are named using lowercase, rather than camelCase. With JSX you pass a string as the event handler, rather than a function.",
        "React events are handled in a separate file, while DOM events are handled inline.",
        "There is no difference between handling events in React and handling events on DOM elements."
      ]
    },
    {
      "question": "Which of the following is the correct way to handle a click event in React?",
      "correct_answer": "<button onClick={handleClick}>Click me!</button>",
      "incorrect_answers": [
        "<button onclick={handleClick}>Click me!</button>",
        "<button onClick='handleClick'>Click me!</button>",
        "<button onclick='handleClick()'>Click me!</button>"
      ]
    },
    {
      "question": "What is the purpose of the synthetic event object in React?",
      "correct_answer": "It is a cross-browser wrapper around the browser's native event. It has the same interface as the browser's native event, including stopPropagation() and preventDefault().",
      "incorrect_answers": [
        "It is used to simulate events in React components.",
        "It is a custom event object created by React.",
        "It is used to handle events in JSX syntax."
      ]
    },
    {
      "question": "How can you pass additional parameters to an event handler function in React?",
      "correct_answer": "By using an anonymous function and passing the parameters within it.",
      "incorrect_answers": [
        "By concatenating the parameters to the event handler function name.",
        "By using the bind() method to bind the parameters to the event handler function.",
        "By passing the parameters directly to the event handler function in JSX syntax."
      ]
    },
    {
      "question": "When updating state based on a previous value in React, why is it recommended to provide a new array or object instead of modifying the existing one directly?",
      "correct_answer": "Modifying the existing array or object directly may not trigger a re-render of the component.",
      "incorrect_answers": [
        "Providing a new array or object is more efficient in terms of memory usage.",
        "Modifying the existing array or object directly can cause an error in React.",
        "React does not allow direct modification of state arrays or objects."
      ]
    },
    {
      "question": "What is the recommended way to update an array in state in React?",
      "correct_answer": "By creating a new array and spreading the existing array elements, followed by adding or removing the desired elements.",
      "incorrect_answers": [
        "By using the push() method to add elements to the existing array.",
        "By using the splice() method to add or remove elements from the existing array.",
        "By directly modifying the existing array using index assignment."
      ]
    },
    {
      "question": "What is the recommended way to update an object in state in React?",
      "correct_answer": "By creating a new object and spreading the properties of the existing object, followed by adding or modifying the desired properties.",
      "incorrect_answers": [
        "By using the dot notation to directly modify the properties of the existing object.",
        "By using the Object.assign() method to copy the properties from the existing object to a new object.",
        "By creating a new object and using the spread operator to merge the properties of the existing object."
      ]
    },
    {
      "question": "In React, how are events named?",
      "correct_answer": "Using camelCase",
      "incorrect_answers": [
        "Using lowercase",
        "Using kebab-case",
        "Using PascalCase"
      ]
    },
    {
      "question": "How do you pass a function as an event handler in JSX?",
      "correct_answer": "onClick={handleClick}",
      "incorrect_answers": [
        "onClick={handleClick()}",
        "onClick='handleClick'",
        "onClick={handleClick()}"
      ]
    },
    {
      "question": "What is the purpose of the useState hook?",
      "correct_answer": "To manage state in a functional component",
      "incorrect_answers": [
        "To handle API requests",
        "To create reusable components",
        "To handle user events"
      ]
    },
    {
      "question": "What is the correct syntax for updating state based on a previous value?",
      "correct_answer": "setCount(prevCount => prevCount + 1)",
      "incorrect_answers": [
        "setCount(count + 1)",
        "setCount(prevCount + 1)",
        "setCount(count => count + 1)"
      ]
    },
    {
      "question": "What is the purpose of the useEffect hook?",
      "correct_answer": "To perform side effects in a functional component",
      "incorrect_answers": [
        "To handle API requests",
        "To create reusable components",
        "To handle user events"
      ]
    },
    {
      "question": "Which hook should be used for fetching API data?",
      "correct_answer": "useEffect",
      "incorrect_answers": [
        "useState",
        "useCallback",
        "useContext"
      ]
    },
    {
      "question": "What is the correct way to make an API request in React?",
      "correct_answer": "Using the fetch function",
      "incorrect_answers": [
        "Using the axios library",
        "Using the xhr object",
        "Using the get method"
      ]
    },
    {
      "question": "What is the purpose of the map function in React?",
      "correct_answer": "To iterate over an array and create a new array of transformed elements",
      "incorrect_answers": [
        "To filter an array and remove elements based on a condition",
        "To find the first element that matches a condition in an array",
        "To sort an array in ascending order"
      ]
    },
    {
      "question": "What does API stand for?",
      "correct_answer": "Application Programming Interface",
      "incorrect_answers": [
        "Advanced Programming Interface",
        "Automated Program Interface",
        "Application Protocol Interface"
      ]
    },
    {
      "question": "What is the HTTP method commonly used for retrieving data from an API?",
      "correct_answer": "GET",
      "incorrect_answers": [
        "POST",
        "PUT",
        "DELETE"
      ]
    },
    {
      "question": "Which function should be used to send an API request with the GET method in React?",
      "correct_answer": "fetch",
      "incorrect_answers": [
        "axios.get",
        "xhr.open",
        "get"
      ]
    },
    {
      "question": "What is the purpose of the useState hook in React?",
      "correct_answer": "To add state to functional components",
      "incorrect_answers": [
        "To handle API requests",
        "To create reusable components",
        "To handle user events"
      ]
    }
  ],
  "setCount": 3
}